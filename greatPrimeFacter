def greatPrimeFacter(n):
    
    # 1. 소인수의 후보군을 추리기 위해, 우선 n보다 같거나 작은 소수를 모두 구한다.
    # n도 소수일 수 있기 때문에 n+1을 사용한다.
    
    # 1-1. n+1개의 True 값이 들어있는 목록을 준비
    sieve = [True] * (n+1)
    
    # 1-2. 2부터 n까지 하나씩 순차적으로 소수 여부를 판단
    for i in range(2, n+1):
        if sieve[i] == True:
            for j in range(i+i, (n+1), i):
                sieve[j] = False
                
    # 1-3. n보다 같거나 작은 모든 소수 값을 prime_list 에 저장
    prime_list = [i for i in range(2,n+1) if sieve[i] == True]

    
    # 2. prime_list에서 가장 큰 n의 인수를 구한다.
    # To-do - pass는 지우고 코드를 작성해주세요.
    for p in prime_list :
        if n % p ==0:
            result = p
    return result

# 결과 출력을 위한 코드입니다. 자유롭게 값을 바꿔보며 확인해보세요.
print(greatPrimeFacter(6))
